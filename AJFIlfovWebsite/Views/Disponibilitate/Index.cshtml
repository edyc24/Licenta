@model IEnumerable<AJFIlfov.BusinessLogic.Implementation.DisponibilitateService.Models.CerereModel>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Cererile mele</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/css/Disponibilitate/Index.css"/>

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
</head>
<style>
    html,
    body {
        min-height: 100vh;
        display: flex;
        flex-direction: column;
    } 
</style>
<body>

<div class="container">
    <div class="header">
        <h1>Cererile mele</h1>
    </div>

    <div class="table-responsive">
        <table class="table table-striped">
            <thead>
            <tr>
                <th>Zi</th>
                <th>Creat la</th>
                <th>Status</th>
                <th>Ora Începere</th>
                <th>Ora Încheiere</th>
                <th>Acțiuni</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.Zi.ToString("dd/MM/yyyy")</td>
                    <td>@item.CreatedOn.ToString("dd/MM/yyyy")</td>
                    <td>@item.Status ?: "Disponibil"</td>
                    <td>@(item.Status == "Indisponibil" ? "N/A" : item.Status == "Disponibil" ? "08:00" : item.OraIncepere?.ToString("HH:mm") ?? "N/A")</td>
                    <td>@(item.Status == "Indisponibil" ? "N/A" : item.Status == "Disponibil" ? "22:00" : item.OraIncheiere?.ToString("HH:mm") ?? "N/A")</td>
                    <td>
                        <button type="button" class="btn btn-primary modificaDisponibilitatea" data-id="@item.IdCerere" data-zi="@item.Zi" data-status="@item.Status" data-oraIncepere="@item.OraIncepere?.ToString("HH:mm")" data-oraIncheiere="@item.OraIncheiere?.ToString("HH:mm")">
                            Modifică
                        </button>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>

<!-- Custom Modal -->
<div class="modal-overlay" id="modalOverlay">
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title">Adaugă/Modifică Disponibilitate</h5>
            <button type="button" class="modal-close">&times;</button>
        </div>
        <div class="modal-body">
            <form id="modalForm">
                <div class="form-group">
                    <label for="status">Status:</label>
                    <select class="form-control status" id="status" name="status">
                        <option value="Disponibil">Disponibil</option>
                        <option value="Indisponibil">Indisponibil</option>
                        <option value="DisponibilPartial">Disponibil Parțial</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="oraIncepere">Ora Începere:</label>
                    <input type="text" class="form-control oraIncepere" id="oraIncepere" name="oraIncepere">
                </div>
                <div class="form-group">
                    <label for="oraIncheiere">Ora Încheiere:</label>
                    <input type="text" class="form-control oraIncheiere" id="oraIncheiere" name="oraIncheiere">
                </div>
                <div class="form-group">
                    <label for="zi">Zi:</label>
                    <input type="text" class="form-control zi" id="zi" name="zi" readonly>
                </div>
                <input type="hidden" class="form-control" id="idCerere" name="idCerere">
            </form>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" id="closeModal">Închide</button>
            <button type="button" class="btn btn-primary" id="saveChanges">Salvează</button>
        </div>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
<script>
    $(document).ready(function () {
        const modalOverlay = document.getElementById('modalOverlay');
        const closeModalBtn = document.getElementById('closeModal');
        const modalCloseBtn = document.querySelector('.modal-close');
        const saveChangesBtn = document.getElementById('saveChanges');

        // Initialize flatpickr for time inputs
        flatpickr(".oraIncepere", {
            enableTime: true,
            noCalendar: true,
            dateFormat: "H:i",
            time_24hr: true,
            disableMobile: true,
            clickOpens: false
        });

        flatpickr(".oraIncheiere", {
            enableTime: true,
            noCalendar: true,
            dateFormat: "H:i",
            time_24hr: true,
            disableMobile: true,
            clickOpens: false
        });

        // Handle modal show event
        $('.modificaDisponibilitatea').click(function () {
            var idCerere = $(this).data('id');
            var status = $(this).data('status');
            var oraIncepere = $(this).data('oraIncepere') || '08:00';
            var oraIncheiere = $(this).data('oraIncheiere') || '22:00';
            var zi = $(this).data('zi');

            // Populate fields with current data
            $('#status').val(status);
            $('#oraIncepere').val(oraIncepere);
            $('#oraIncheiere').val(oraIncheiere);
            $('#zi').val(zi);
            $('#idCerere').val(idCerere);

            // Initialize readonly based on status
            setReadonlyForTimes(status);

            // Show modal
            modalOverlay.classList.add('show');
        });

        // Handle status change
        $('#status').change(function () {
            var status = $(this).val();
            setReadonlyForTimes(status);
        });

        // Function to set readonly property and default values for time inputs based on status
        function setReadonlyForTimes(status) {
            var oraIncepereInput = $('#oraIncepere');
            var oraIncheiereInput = $('#oraIncheiere');
            var oraIncepereFlatpickr = oraIncepereInput[0]._flatpickr;
            var oraIncheiereFlatpickr = oraIncheiereInput[0]._flatpickr;

            if (status === 'Disponibil') {
                oraIncepereInput.val('08:00');
                oraIncheiereInput.val('22:00');
                
                // Completely disable the inputs
                oraIncepereFlatpickr.disable();
                oraIncheiereFlatpickr.disable();
                oraIncepereInput.prop('readonly', true).prop('disabled', true).css('pointer-events', 'none').css('background-color', '#f8f9fa');
                oraIncheiereInput.prop('readonly', true).prop('disabled', true).css('pointer-events', 'none').css('background-color', '#f8f9fa');
            } else if (status === 'Indisponibil') {
                oraIncepereInput.val('');
                oraIncheiereInput.val('');
                
                // Completely disable the inputs
                oraIncepereFlatpickr.disable();
                oraIncheiereFlatpickr.disable();
                oraIncepereInput.prop('readonly', true).prop('disabled', true).css('pointer-events', 'none').css('background-color', '#f8f9fa');
                oraIncheiereInput.prop('readonly', true).prop('disabled', true).css('pointer-events', 'none').css('background-color', '#f8f9fa');
            } else if (status === 'DisponibilPartial') {
                // Enable the inputs and flatpickr
                oraIncepereInput.prop('readonly', false)
                    .prop('disabled', false)
                    .css('pointer-events', 'auto')
                    .css('background-color', 'white')
                    .removeAttr('readonly')
                    .removeAttr('disabled');
                
                oraIncheiereInput.prop('readonly', false)
                    .prop('disabled', false)
                    .css('pointer-events', 'auto')
                    .css('background-color', 'white')
                    .removeAttr('readonly')
                    .removeAttr('disabled');

                // Reinitialize flatpickr with clickOpens enabled
                oraIncepereFlatpickr.destroy();
                oraIncheiereFlatpickr.destroy();

                flatpickr(".oraIncepere", {
                    enableTime: true,
                    noCalendar: true,
                    dateFormat: "H:i",
                    time_24hr: true,
                    disableMobile: true,
                    clickOpens: true
                });

                flatpickr(".oraIncheiere", {
                    enableTime: true,
                    noCalendar: true,
                    dateFormat: "H:i",
                    time_24hr: true,
                    disableMobile: true,
                    clickOpens: true
                });

                // Set default values if empty
                if (!oraIncepereInput.val() || oraIncepereInput.val() === 'N/A') {
                    oraIncepereInput.val('08:00');
                }
                if (!oraIncheiereInput.val() || oraIncheiereInput.val() === 'N/A') {
                    oraIncheiereInput.val('22:00');
                }
            }
        }

        // Handle saving changes
        saveChangesBtn.addEventListener('click', function() {
            var formData = $('#modalForm').serialize();
            $.post('@Url.Action("AdaugaDisponibilitate", "Disponibilitate")', formData)
                .done(function (response) {
                    console.log('Datele au fost salvate cu succes!');
                    location.reload();
                })
                .fail(function (error) {
                    console.error('A apărut o eroare la salvarea datelor:', error);
                });
        });

        // Close modal handlers
        function closeModal() {
            modalOverlay.classList.remove('show');
        }

        closeModalBtn.addEventListener('click', closeModal);
        modalCloseBtn.addEventListener('click', closeModal);
        modalOverlay.addEventListener('click', function(e) {
            if (e.target === modalOverlay) {
                closeModal();
            }
        });

        // Set default status to "Disponibil" when opening modal
        $('.modificaDisponibilitatea').click(function() {
            setTimeout(function() {
                var statusSelect = $('#status');
                if (!statusSelect.val()) {
                    statusSelect.val('Disponibil');
                    setReadonlyForTimes('Disponibil');
                }
            }, 0);
        });
    });
</script>
</body>
</html>