@model QnA.Models.QuestionModel

<div class="question-container">
    <div class="question-header">
        <h2>@Model.Title</h2>
        <div class="question-meta">
            <p>Asked by: <strong>@Model.UserName</strong></p>
            <p>Asked on: <strong>@Model.CreatedAt.ToString("dd MMMM yyyy")</strong></p>
        </div>
    </div>
    <div class="question-content">
        <p>@Model.Content</p>
    </div>

    <div class="answers-section">
        <h3>@Model.Answers.Count Answer(s)</h3>
        <ul>
            @foreach (var answer in Model.Answers)
            {
                <li class="answer-item">
                    <p>@answer.Content</p>
                    <div class="answer-meta">
                        <p>Answered by: <strong>@answer.UserName</strong></p>
                        <p>Answered on: <strong>@answer.CreatedAt.ToString("dd MMMM yyyy")</strong></p>
                        <p>Badge: <span class="badge" title="This user has earned the @GetBadge(@answer.UserPoints ?? 0) badge for having @answer.UserPoints points">@GetBadge(@answer.UserPoints ?? 0)</span></p>
                        <p>Points: <strong>@answer.UserPoints</strong></p>
                        <div class="vote-buttons">
                            <form method="post" asp-action="UpvoteAnswer">
                                <input type="hidden" name="answerId" value="@answer.Id" />
                                <button type="submit" class="upvote-button">Upvote (@answer.UpVote)</button>
                            </form>
                            <form method="post" asp-action="DownvoteAnswer">
                                <input type="hidden" name="answerId" value="@answer.Id" />
                                <button type="submit" class="downvote-button">Downvote (@answer.DownVote)</button>
                            </form>
                        </div>
                    </div>
                </li>
            }
        </ul>
    </div>

    <div class="add-answer-section">
        <h3>Your Answer</h3>
        <form method="post" asp-action="AddAnswer">
            <input type="hidden" name="questionId" value="@Model.Id" />
            <textarea name="content" placeholder="Your answer..." required></textarea>
            <button type="submit">Submit Answer</button>
        </form>
    </div>
</div>

<style>
    .question-container {
        width: 80%;
        max-width: 1000px;
        margin: 40px auto;
        padding: 20px;
        background-color: #f8fafc;
        border-radius: 8px;
    }

    .question-header {
        margin-bottom: 20px;
    }

        .question-header h2 {
            font-size: 2.5em;
            color: #007acc;
            margin-bottom: 10px;
        }

    .question-meta {
        font-size: 1em;
        color: #555;
    }

        .question-meta p {
            margin: 5px 0;
        }

    .badge {
        background-color: #ffc107;
        color: #fff;
        padding: 5px 10px;
        border-radius: 4px;
        cursor: pointer;
    }

    .question-content {
        font-size: 1.2em;
        color: #333;
        margin-bottom: 30px;
    }

    .answers-section {
        margin-top: 30px;
    }

        .answers-section h3 {
            font-size: 2em;
            color: #007acc;
            margin-bottom: 20px;
        }

        .answers-section ul {
            list-style-type: none;
            padding-left: 0;
        }

    .answer-item {
        margin-bottom: 20px;
        padding: 15px;
        background-color: #fff;
        border: 1px solid #ddd;
        border-radius: 4px;
    }

    .answer-meta {
        font-size: 0.9em;
        color: #555;
        margin-top: 10px;
    }

        .answer-meta p {
            margin: 5px 0;
        }

    .vote-buttons {
        display: flex;
        gap: 10px;
    }

        .vote-buttons form {
            display: inline;
        }

    .upvote-button, .downvote-button {
        padding: 5px 10px;
        border-radius: 4px;
        border: none;
        cursor: pointer;
    }

    .upvote-button {
        background-color: #28a745;
        color: white;
    }

    .downvote-button {
        background-color: #dc3545;
        color: white;
    }

    .add-answer-section {
        margin-top: 40px;
    }

        .add-answer-section h3 {
            font-size: 2em;
            color: #007acc;
            margin-bottom: 20px;
        }

        .add-answer-section form {
            display: flex;
            flex-direction: column;
        }

        .add-answer-section textarea {
            width: 100%;
            height: 150px;
            padding: 10px;
            border-radius: 4px;
            border: 1px solid #ccc;
            margin-bottom: 10px;
        }

        .add-answer-section button {
            padding: 10px 20px;
            border-radius: 4px;
            background-color: #007acc;
            color: white;
            border: none;
            cursor: pointer;
            align-self: flex-start;
        }

            .add-answer-section button:hover {
                background-color: #005fa3;
            }
</style>

@functions {
    public string GetBadge(int points)
    {
        if (points >= 1000)
            return "Gold";
        else if (points >= 500)
            return "Silver";
        else if (points >= 100)
            return "Bronze";
        else
            return "Newbie";
    }
}